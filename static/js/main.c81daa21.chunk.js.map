{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","utils/fetchClient.ts","components/NewCommentForm.tsx","api/ApiMethods.ts","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","userPosts","setOpenPost","openPost","setOpenForm","className","map","post","id","title","onClick","type","Loader","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","json","client","NewCommentForm","setPostComments","setHasError","useState","name","email","formInputs","setFormInputs","loading","setLoading","tuched","setTuched","checkInputName","trim","checkEmailName","checkBodyName","handleChange","e","target","value","prev","handleSubmitForm","preventDefault","newComment","postId","res","catch","finally","onSubmit","htmlFor","placeholder","classNames","onChange","required","PostDetails","openForm","postComments","hasError","handleDeleteComments","comId","updatePostComments","index","findIndex","com","splice","useEffect","PostComments","length","href","UserSelector","setSelectUser","selectUser","allUsers","setAllUsers","dropdownTrigger","setDropdownTrigger","users","role","hidden","user","handleSelect","App","setUserPosts","hasSelect","setHasSelect","posts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c81daa21.chunk.js","sourcesContent":["import React from 'react';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  userPosts: Post[],\n  setOpenPost: (v: Post | null) => void,\n  openPost: Post | null,\n  setOpenForm: (v: boolean) => void,\n};\nexport const PostsList: React.FC<Props> = ({\n  userPosts,\n  setOpenPost,\n  openPost,\n  setOpenForm,\n}) => (\n  <div data-cy=\"PostsList\">\n    <p className=\"title\">Posts:</p>\n\n    <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n      <thead>\n        <tr className=\"has-background-link-light\">\n          <th>#</th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {userPosts.map((post) => (\n          <tr data-cy=\"Post\" key={post.id}>\n            <td data-cy=\"PostId\">{post.id}</td>\n\n            <td data-cy=\"PostTitle\">{post.title}</td>\n\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */}\n            <td\n              className=\"has-text-right is-vcentered\"\n              onClick={() => setOpenForm(false)}\n            >\n              {openPost && openPost.id === post.id ? (\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className=\"button is-link\"\n                  onClick={() => setOpenPost(null)}\n                >\n                  Close\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className=\"button is-link is-light\"\n                  onClick={() => setOpenPost(post)}\n                >\n                  Open\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: unknown = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: unknown) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: unknown) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\nimport { addComment } from '../api/ApiMethods';\n\ntype Props = {\n  openPost: Post | null,\n  setPostComments: React.Dispatch<React.SetStateAction<Comment[]>>,\n  setHasError: (v: boolean) => void,\n  setOpenForm: (v: boolean) => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  openPost,\n  setPostComments,\n  setHasError,\n  setOpenForm,\n}) => {\n  const [formInputs, setFormInputs] = useState({\n    name: '',\n    email: '',\n    body: '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [tuched, setTuched] = useState(false);\n\n  const checkInputName = !formInputs.name.trim() && tuched;\n  const checkEmailName = !formInputs.email.trim() && tuched;\n  const checkBodyName = !formInputs.body.trim() && tuched;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement\n  | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n\n    setTuched(false);\n    setFormInputs(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleClear = () => {\n    setFormInputs({\n      name: '',\n      email: '',\n      body: '',\n    });\n  };\n\n  const handleSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (openPost) {\n      const newComment = { ...formInputs, postId: openPost.id };\n\n      setLoading(true);\n\n      addComment(newComment)\n        .then(res => {\n          setPostComments(prev => ([...prev, res]));\n          setFormInputs(prev => ({ ...prev, body: '' }));\n          setTuched(false);\n        })\n        .catch(() => {\n          setHasError(true);\n          setOpenForm(false);\n        })\n        .finally(() => setLoading(false));\n    }\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={(e) => handleSubmitForm(e)}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={classNames('input', { 'is-danger': checkInputName })}\n            value={formInputs.name}\n            onChange={(e) => handleChange(e)}\n            required\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {checkInputName && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {checkInputName && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={classNames('input', { 'is-danger': checkEmailName })}\n            value={formInputs.email}\n            onChange={(e) => handleChange(e)}\n            required\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {checkEmailName && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {checkEmailName && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={classNames('textarea', { 'is-danger': checkBodyName })}\n            value={formInputs.body}\n            onChange={(e) => handleChange(e)}\n            required\n          />\n        </div>\n\n        {checkBodyName && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            onClick={() => setTuched(true)}\n            className={classNames('button', 'is-link', {\n              'is-loading': loading,\n            })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={handleClear}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n// is-loading\n","import { User } from '../types/User';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\nimport { client } from '../utils/fetchClient';\n\nexport const getUsers = () => {\n  return client.get<User[]>('/users');\n};\n\nexport const getPosts = (id: number) => {\n  return client.get<Post[]>(`/posts?userId=${id}`);\n};\n\nexport const getComment = (id: number) => {\n  return client.get<Comment[]>(`/comments?postId=${id}`);\n};\n\nexport const addComment = (data: Omit<Comment, 'id'>) => {\n  return client.post<Comment>('/comments', data);\n};\n\nexport const deleteComment = (id: number) => {\n  return client.delete(`/comments/${id}`);\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\n\nimport { Comment } from '../types/Comment';\nimport { Post } from '../types/Post';\nimport { getComment, deleteComment } from '../api/ApiMethods';\nimport { NewCommentForm } from './NewCommentForm';\n\ntype Props = {\n  openPost: Post | null,\n  setOpenForm: (v: boolean) => void,\n  openForm: boolean,\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  openPost,\n  setOpenForm,\n  openForm,\n}) => {\n  const [postComments, setPostComments] = useState<Comment[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleDeleteComments = (comId: number) => {\n    deleteComment(comId)\n      .then(() => {\n        const updatePostComments = [...postComments];\n        const index = updatePostComments.findIndex(com => com.id === comId);\n\n        updatePostComments.splice(index, 1);\n        setPostComments(updatePostComments);\n      })\n      .catch(() => setHasError(true));\n  };\n\n  useEffect(() => {\n    if (openPost) {\n      setLoading(true);\n      setHasError(false);\n\n      getComment(openPost.id)\n        .then(PostComments => setPostComments(PostComments))\n        .catch(() => setHasError(true))\n        .finally(() => setLoading(false));\n    }\n  }, [openPost]);\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">{`#${openPost?.id}: ${openPost?.title}`}</h2>\n\n          <p data-cy=\"PostBody\">{openPost?.body}</p>\n        </div>\n\n        {!hasError && (\n          <div className=\"block\">\n            {loading ? (\n              <Loader />\n            ) : (\n              <>\n                {postComments.length === 0 ? (\n                  <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n                    No comments yet\n                  </p>\n                ) : (\n                  <>\n                    <p className=\"title is-4\">Comments:</p>\n                    {postComments.map((com) => (\n                      <article\n                        className=\"message is-small\"\n                        data-cy=\"Comment\"\n                        key={com.id}\n                      >\n                        <div className=\"message-header\">\n                          <a\n                            href={`mailto:${com.email}`}\n                            data-cy=\"CommentAuthor\"\n                          >\n                            {com.name}\n                          </a>\n                          <button\n                            data-cy=\"CommentDelete\"\n                            type=\"button\"\n                            className=\"delete is-small\"\n                            aria-label=\"delete\"\n                            onClick={() => handleDeleteComments(com.id)}\n                          >\n                            delete button\n                          </button>\n                        </div>\n\n                        <div className=\"message-body\" data-cy=\"CommentBody\">\n                          {com.body}\n                        </div>\n                      </article>\n                    ))}\n                  </>\n                )}\n\n                {!openForm && (\n                  <button\n                    data-cy=\"WriteCommentButton\"\n                    type=\"button\"\n                    className=\"button is-link\"\n                    onClick={() => setOpenForm(true)}\n                  >\n                    Write a comment\n                  </button>\n                )}\n              </>\n            )}\n          </div>\n        )}\n\n        {hasError && (\n          <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n            Something went wrong\n          </div>\n        )}\n\n        {openForm && (\n          <NewCommentForm\n            openPost={openPost}\n            setPostComments={setPostComments}\n            setHasError={setHasError}\n            setOpenForm={setOpenForm}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { User } from '../types/User';\nimport { getUsers } from '../api/ApiMethods';\n\ntype Props = {\n  setSelectUser: (v: User) => void,\n  selectUser: User | null,\n};\n\nexport const UserSelector: React.FC<Props> = ({\n  setSelectUser,\n  selectUser,\n}) => {\n  const [allUsers, setAllUsers] = useState<null | User[]>(null);\n  const [dropdownTrigger, setDropdownTrigger] = useState(true);\n\n  const handleTrigger = () => {\n    setDropdownTrigger(prev => !prev);\n  };\n\n  const handleSelect = (user: User) => {\n    setSelectUser(user);\n    setDropdownTrigger(true);\n  };\n\n  useEffect(() => {\n    getUsers().then(users => setAllUsers(users));\n  }, []);\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className=\"dropdown is-active\"\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={handleTrigger}\n        >\n          <span>{selectUser ? selectUser.name : 'Choose a user'}</span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\" hidden={dropdownTrigger}>\n          {allUsers?.map(user => (\n            <a\n              href={`#user-${user.id}`}\n              key={user.id}\n              className={classNames('dropdown-item', {\n                'is-active': user.id === selectUser?.id,\n              })}\n              onClick={() => handleSelect(user)}\n            >\n              {user.name}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\n\nimport { User } from './types/User';\nimport { Post } from './types/Post';\n\nimport { getPosts } from './api/ApiMethods';\n\nexport const App: React.FC = () => {\n  const [selectUser, setSelectUser] = useState<User | null>(null);\n  const [userPosts, setUserPosts] = useState<Post[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [hasSelect, setHasSelect] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [openPost, setOpenPost] = useState<Post | null>(null);\n  const [openForm, setOpenForm] = useState(false);\n\n  useEffect(() => {\n    if (selectUser) {\n      setLoading(true);\n      setHasError(false);\n\n      getPosts(selectUser.id)\n        .then(posts => setUserPosts(posts))\n        .catch(() => setHasError(true))\n        .finally(() => {\n          setLoading(false);\n          setHasSelect(true);\n        });\n    }\n  }, [selectUser]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  setSelectUser={setSelectUser}\n                  selectUser={selectUser}\n                />\n              </div>\n\n              {loading ? (\n                <Loader />\n              ) : (\n                <div className=\"block\" data-cy=\"MainContent\">\n                  {!selectUser && (\n                    <p data-cy=\"NoSelectedUser\">No user selected</p>\n                  )}\n\n                  {hasError && (\n                    <div\n                      className=\"notification is-danger\"\n                      data-cy=\"PostsLoadingError\"\n                    >\n                      Something went wrong!\n                    </div>\n                  )}\n\n                  {userPosts.length === 0 && hasSelect && (\n                    <div\n                      className=\"notification is-warning\"\n                      data-cy=\"NoPostsYet\"\n                    >\n                      No posts yet\n                    </div>\n                  )}\n\n                  {userPosts.length !== 0 && (\n                    <PostsList\n                      userPosts={userPosts}\n                      setOpenPost={setOpenPost}\n                      openPost={openPost}\n                      setOpenForm={setOpenForm}\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': openPost },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              <PostDetails\n                openPost={openPost}\n                setOpenForm={setOpenForm}\n                openForm={openForm}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}